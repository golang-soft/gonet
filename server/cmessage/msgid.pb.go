// Code generated by protoc-gen-go. DO NOT EDIT.
// source: msgid.proto

package cmessage

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MessageID int32

const (
	MessageID_MSG_BEGIN MessageID = 0
	//============================================================================================
	//                 一般消息定义
	//============================================================================================
	//    MSG_NORMAL_MSGID_BEGIN           = 100000;
	//
	MessageID_MSG_CHECK_VERSION_REQ    MessageID = 100001
	MessageID_MSG_CHECK_VERSION_ACK    MessageID = 100002
	MessageID_MSG_MovingReq            MessageID = 100003
	MessageID_MSG_MovingResp           MessageID = 100004
	MessageID_MSG_AttackReq            MessageID = 100005
	MessageID_MSG_AttackResp           MessageID = 100006
	MessageID_MSG_AttackSuccessResp    MessageID = 100007
	MessageID_MSG_JumpReq              MessageID = 100008
	MessageID_MSG_JumpResp             MessageID = 100009
	MessageID_MSG_SkillShieldResp      MessageID = 100010
	MessageID_MSG_SkillThornsResp      MessageID = 100011
	MessageID_MSG_SkillDeformationResp MessageID = 100012
	MessageID_MSG_SkillImmuneResp      MessageID = 100013
	MessageID_MSG_ReliveResp           MessageID = 100014
	MessageID_MSG_FlagReq              MessageID = 100015
	MessageID_MSG_FlagResp             MessageID = 100016
	MessageID_MSG_FlagSuccessResp      MessageID = 100017
	MessageID_MSG_UseItemReq           MessageID = 100018
	MessageID_MSG_AddHpResp            MessageID = 100019
	MessageID_MSG_UseItem1003Resp      MessageID = 100020
	MessageID_MSG_UpdateDvtResp        MessageID = 100021
	MessageID_MSG_RewardReq            MessageID = 100022
	MessageID_MSG_RewardResp           MessageID = 100023
)

var MessageID_name = map[int32]string{
	0:      "MSG_BEGIN",
	100001: "MSG_CHECK_VERSION_REQ",
	100002: "MSG_CHECK_VERSION_ACK",
	100003: "MSG_MovingReq",
	100004: "MSG_MovingResp",
	100005: "MSG_AttackReq",
	100006: "MSG_AttackResp",
	100007: "MSG_AttackSuccessResp",
	100008: "MSG_JumpReq",
	100009: "MSG_JumpResp",
	100010: "MSG_SkillShieldResp",
	100011: "MSG_SkillThornsResp",
	100012: "MSG_SkillDeformationResp",
	100013: "MSG_SkillImmuneResp",
	100014: "MSG_ReliveResp",
	100015: "MSG_FlagReq",
	100016: "MSG_FlagResp",
	100017: "MSG_FlagSuccessResp",
	100018: "MSG_UseItemReq",
	100019: "MSG_AddHpResp",
	100020: "MSG_UseItem1003Resp",
	100021: "MSG_UpdateDvtResp",
	100022: "MSG_RewardReq",
	100023: "MSG_RewardResp",
}

var MessageID_value = map[string]int32{
	"MSG_BEGIN":                0,
	"MSG_CHECK_VERSION_REQ":    100001,
	"MSG_CHECK_VERSION_ACK":    100002,
	"MSG_MovingReq":            100003,
	"MSG_MovingResp":           100004,
	"MSG_AttackReq":            100005,
	"MSG_AttackResp":           100006,
	"MSG_AttackSuccessResp":    100007,
	"MSG_JumpReq":              100008,
	"MSG_JumpResp":             100009,
	"MSG_SkillShieldResp":      100010,
	"MSG_SkillThornsResp":      100011,
	"MSG_SkillDeformationResp": 100012,
	"MSG_SkillImmuneResp":      100013,
	"MSG_ReliveResp":           100014,
	"MSG_FlagReq":              100015,
	"MSG_FlagResp":             100016,
	"MSG_FlagSuccessResp":      100017,
	"MSG_UseItemReq":           100018,
	"MSG_AddHpResp":            100019,
	"MSG_UseItem1003Resp":      100020,
	"MSG_UpdateDvtResp":        100021,
	"MSG_RewardReq":            100022,
	"MSG_RewardResp":           100023,
}

func (x MessageID) String() string {
	return proto.EnumName(MessageID_name, int32(x))
}

func (MessageID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_966e8594ae8b5087, []int{0}
}

func init() {
	proto.RegisterEnum("cmessage.MessageID", MessageID_name, MessageID_value)
}

func init() { proto.RegisterFile("msgid.proto", fileDescriptor_966e8594ae8b5087) }

var fileDescriptor_966e8594ae8b5087 = []byte{
	// 373 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0xc9, 0x4e, 0xeb, 0x30,
	0x14, 0x86, 0xef, 0xe2, 0xca, 0xba, 0x75, 0x6f, 0x91, 0xeb, 0x82, 0x00, 0x21, 0xf1, 0x00, 0x2c,
	0x4a, 0x51, 0x97, 0xac, 0x3a, 0x84, 0x36, 0x54, 0x2d, 0x22, 0x01, 0x16, 0x6c, 0xaa, 0x90, 0x98,
	0x36, 0x6a, 0x06, 0x13, 0xa7, 0xe5, 0x29, 0xfc, 0x10, 0xcc, 0xf3, 0x3c, 0xad, 0x79, 0x33, 0x64,
	0x87, 0xe2, 0xa8, 0x62, 0x97, 0x7c, 0xdf, 0xc9, 0x1f, 0xff, 0xd6, 0x81, 0x59, 0x9f, 0xf5, 0x5c,
	0xa7, 0x48, 0xa3, 0x30, 0x0e, 0xf1, 0x3f, 0xdb, 0x27, 0x8c, 0x59, 0x3d, 0xb2, 0xf4, 0xf9, 0x17,
	0x66, 0xda, 0xc9, 0xb3, 0x5e, 0xc7, 0x39, 0x98, 0x69, 0x9b, 0x8d, 0x6e, 0x55, 0x6b, 0xe8, 0x1d,
	0xf4, 0x07, 0x2f, 0xc0, 0x19, 0xf1, 0x5a, 0x6b, 0x6a, 0xb5, 0x56, 0x77, 0x47, 0x33, 0x4c, 0x7d,
	0xa3, 0xd3, 0x35, 0xb4, 0x4d, 0x74, 0xc4, 0xc1, 0xef, 0xb2, 0x52, 0x6b, 0xa1, 0x63, 0x0e, 0x70,
	0x01, 0xe6, 0x84, 0x6c, 0x87, 0x23, 0x37, 0xe8, 0x19, 0xe4, 0x00, 0x9d, 0x70, 0x80, 0xa7, 0xe1,
	0x54, 0x1a, 0x32, 0x8a, 0x4e, 0xd5, 0x68, 0x25, 0x8e, 0x2d, 0x7b, 0x20, 0x46, 0xcf, 0xd4, 0xe8,
	0x18, 0x32, 0x8a, 0xce, 0xd5, 0x2f, 0x13, 0x6a, 0x0e, 0x6d, 0x9b, 0x30, 0x26, 0xe5, 0x05, 0x07,
	0x38, 0x0f, 0xb3, 0x42, 0xae, 0x0f, 0x7d, 0x2a, 0x52, 0x2e, 0x39, 0xc0, 0x18, 0xfe, 0x57, 0x88,
	0x51, 0x74, 0xc5, 0x01, 0x9e, 0x87, 0x05, 0xc1, 0xcc, 0x81, 0xeb, 0x79, 0x66, 0xdf, 0x25, 0x9e,
	0x23, 0xd5, 0xf5, 0x84, 0xda, 0xea, 0x87, 0x51, 0x90, 0x84, 0xdf, 0x70, 0x80, 0x17, 0xe1, 0xdc,
	0x8f, 0xaa, 0x93, 0xfd, 0x30, 0xf2, 0xad, 0xd8, 0x0d, 0x03, 0xe9, 0x6f, 0x27, 0x3e, 0xd5, 0x7d,
	0x7f, 0x18, 0x10, 0xa9, 0xee, 0x54, 0x15, 0x83, 0x78, 0xee, 0x28, 0xa1, 0xf7, 0xea, 0xb4, 0x6b,
	0x9e, 0x25, 0xaf, 0xe7, 0x41, 0x9d, 0x36, 0x41, 0x8c, 0xa2, 0x47, 0x95, 0x2b, 0x58, 0xba, 0xef,
	0x93, 0xca, 0xdd, 0x66, 0x44, 0x8f, 0x89, 0x2f, 0x42, 0x9e, 0x53, 0xb7, 0xe9, 0x38, 0xcd, 0xa4,
	0xf3, 0x8b, 0x4a, 0xf9, 0x1e, 0x5d, 0x29, 0x95, 0xca, 0x52, 0xbd, 0x72, 0x80, 0x67, 0x61, 0x5e,
	0x2a, 0xea, 0x58, 0x31, 0xa9, 0x8f, 0x62, 0x29, 0xde, 0x54, 0x90, 0x41, 0x0e, 0xad, 0xc8, 0x11,
	0xe9, 0xef, 0xe9, 0x2e, 0x09, 0x64, 0x14, 0x7d, 0x70, 0x50, 0xcd, 0xed, 0x66, 0x8b, 0xcb, 0xab,
	0xe3, 0x95, 0xda, 0x03, 0x72, 0xc7, 0xca, 0x5f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xe9, 0x5f, 0x72,
	0x13, 0x72, 0x02, 0x00, 0x00,
}
