// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc3.proto

package rpc

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//服务器类型
type SERVICE int32

const (
	SERVICE_NONE          SERVICE = 0
	SERVICE_CLIENT        SERVICE = 1
	SERVICE_GATESERVER    SERVICE = 2
	SERVICE_ACCOUNTSERVER SERVICE = 3
	SERVICE_WORLDSERVER   SERVICE = 4
	SERVICE_ZONESERVER    SERVICE = 5
	SERVICE_CENTERSERVER  SERVICE = 6
	SERVICE_LOGINSERVER   SERVICE = 7
	SERVICE_GRPCSERVER    SERVICE = 8
	SERVICE_WORLDDBSERVER SERVICE = 9
)

var SERVICE_name = map[int32]string{
	0: "NONE",
	1: "CLIENT",
	2: "GATESERVER",
	3: "ACCOUNTSERVER",
	4: "WORLDSERVER",
	5: "ZONESERVER",
	6: "CENTERSERVER",
	7: "LOGINSERVER",
	8: "GRPCSERVER",
	9: "WORLDDBSERVER",
}

var SERVICE_value = map[string]int32{
	"NONE":          0,
	"CLIENT":        1,
	"GATESERVER":    2,
	"ACCOUNTSERVER": 3,
	"WORLDSERVER":   4,
	"ZONESERVER":    5,
	"CENTERSERVER":  6,
	"LOGINSERVER":   7,
	"GRPCSERVER":    8,
	"WORLDDBSERVER": 9,
}

func (x SERVICE) String() string {
	return proto.EnumName(SERVICE_name, int32(x))
}

func (SERVICE) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0fbeb53d931d8059, []int{0}
}

//发送标志
type SEND int32

const (
	SEND_POINT      SEND = 0
	SEND_BALANCE    SEND = 1
	SEND_BOARD_CAST SEND = 2
)

var SEND_name = map[int32]string{
	0: "POINT",
	1: "BALANCE",
	2: "BOARD_CAST",
}

var SEND_value = map[string]int32{
	"POINT":      0,
	"BALANCE":    1,
	"BOARD_CAST": 2,
}

func (x SEND) String() string {
	return proto.EnumName(SEND_name, int32(x))
}

func (SEND) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0fbeb53d931d8059, []int{1}
}

//rpc 包头
type RpcHead struct {
	Id                   int64    `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	SocketId             uint32   `protobuf:"varint,2,opt,name=SocketId,proto3" json:"SocketId,omitempty"`
	SrcClusterId         uint32   `protobuf:"varint,3,opt,name=SrcClusterId,proto3" json:"SrcClusterId,omitempty"`
	ClusterId            uint32   `protobuf:"varint,4,opt,name=ClusterId,proto3" json:"ClusterId,omitempty"`
	DestServerType       SERVICE  `protobuf:"varint,5,opt,name=DestServerType,proto3,enum=rpc.SERVICE" json:"DestServerType,omitempty"`
	SendType             SEND     `protobuf:"varint,6,opt,name=SendType,proto3,enum=rpc.SEND" json:"SendType,omitempty"`
	ActorName            string   `protobuf:"bytes,7,opt,name=ActorName,proto3" json:"ActorName,omitempty"`
	Reply                string   `protobuf:"bytes,8,opt,name=Reply,proto3" json:"Reply,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RpcHead) Reset()         { *m = RpcHead{} }
func (m *RpcHead) String() string { return proto.CompactTextString(m) }
func (*RpcHead) ProtoMessage()    {}
func (*RpcHead) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fbeb53d931d8059, []int{0}
}

func (m *RpcHead) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RpcHead.Unmarshal(m, b)
}
func (m *RpcHead) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RpcHead.Marshal(b, m, deterministic)
}
func (m *RpcHead) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RpcHead.Merge(m, src)
}
func (m *RpcHead) XXX_Size() int {
	return xxx_messageInfo_RpcHead.Size(m)
}
func (m *RpcHead) XXX_DiscardUnknown() {
	xxx_messageInfo_RpcHead.DiscardUnknown(m)
}

var xxx_messageInfo_RpcHead proto.InternalMessageInfo

func (m *RpcHead) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *RpcHead) GetSocketId() uint32 {
	if m != nil {
		return m.SocketId
	}
	return 0
}

func (m *RpcHead) GetSrcClusterId() uint32 {
	if m != nil {
		return m.SrcClusterId
	}
	return 0
}

func (m *RpcHead) GetClusterId() uint32 {
	if m != nil {
		return m.ClusterId
	}
	return 0
}

func (m *RpcHead) GetDestServerType() SERVICE {
	if m != nil {
		return m.DestServerType
	}
	return SERVICE_NONE
}

func (m *RpcHead) GetSendType() SEND {
	if m != nil {
		return m.SendType
	}
	return SEND_POINT
}

func (m *RpcHead) GetActorName() string {
	if m != nil {
		return m.ActorName
	}
	return ""
}

func (m *RpcHead) GetReply() string {
	if m != nil {
		return m.Reply
	}
	return ""
}

//rpc 包
type RpcPacket struct {
	FuncName             string   `protobuf:"bytes,1,opt,name=FuncName,proto3" json:"FuncName,omitempty"`
	ArgLen               int32    `protobuf:"varint,2,opt,name=ArgLen,proto3" json:"ArgLen,omitempty"`
	RpcHead              *RpcHead `protobuf:"bytes,3,opt,name=RpcHead,proto3" json:"RpcHead,omitempty"`
	RpcBody              []byte   `protobuf:"bytes,4,opt,name=RpcBody,proto3" json:"RpcBody,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RpcPacket) Reset()         { *m = RpcPacket{} }
func (m *RpcPacket) String() string { return proto.CompactTextString(m) }
func (*RpcPacket) ProtoMessage()    {}
func (*RpcPacket) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fbeb53d931d8059, []int{1}
}

func (m *RpcPacket) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RpcPacket.Unmarshal(m, b)
}
func (m *RpcPacket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RpcPacket.Marshal(b, m, deterministic)
}
func (m *RpcPacket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RpcPacket.Merge(m, src)
}
func (m *RpcPacket) XXX_Size() int {
	return xxx_messageInfo_RpcPacket.Size(m)
}
func (m *RpcPacket) XXX_DiscardUnknown() {
	xxx_messageInfo_RpcPacket.DiscardUnknown(m)
}

var xxx_messageInfo_RpcPacket proto.InternalMessageInfo

func (m *RpcPacket) GetFuncName() string {
	if m != nil {
		return m.FuncName
	}
	return ""
}

func (m *RpcPacket) GetArgLen() int32 {
	if m != nil {
		return m.ArgLen
	}
	return 0
}

func (m *RpcPacket) GetRpcHead() *RpcHead {
	if m != nil {
		return m.RpcHead
	}
	return nil
}

func (m *RpcPacket) GetRpcBody() []byte {
	if m != nil {
		return m.RpcBody
	}
	return nil
}

//集群信息
type ClusterInfo struct {
	Type                 SERVICE  `protobuf:"varint,1,opt,name=Type,proto3,enum=rpc.SERVICE" json:"Type,omitempty"`
	Ip                   string   `protobuf:"bytes,2,opt,name=Ip,proto3" json:"Ip,omitempty"`
	Port                 int32    `protobuf:"varint,3,opt,name=Port,proto3" json:"Port,omitempty"`
	Weight               int32    `protobuf:"varint,4,opt,name=Weight,proto3" json:"Weight,omitempty"`
	SocketId             uint32   `protobuf:"varint,5,opt,name=SocketId,proto3" json:"SocketId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClusterInfo) Reset()         { *m = ClusterInfo{} }
func (m *ClusterInfo) String() string { return proto.CompactTextString(m) }
func (*ClusterInfo) ProtoMessage()    {}
func (*ClusterInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fbeb53d931d8059, []int{2}
}

func (m *ClusterInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterInfo.Unmarshal(m, b)
}
func (m *ClusterInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterInfo.Marshal(b, m, deterministic)
}
func (m *ClusterInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterInfo.Merge(m, src)
}
func (m *ClusterInfo) XXX_Size() int {
	return xxx_messageInfo_ClusterInfo.Size(m)
}
func (m *ClusterInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterInfo proto.InternalMessageInfo

func (m *ClusterInfo) GetType() SERVICE {
	if m != nil {
		return m.Type
	}
	return SERVICE_NONE
}

func (m *ClusterInfo) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *ClusterInfo) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *ClusterInfo) GetWeight() int32 {
	if m != nil {
		return m.Weight
	}
	return 0
}

func (m *ClusterInfo) GetSocketId() uint32 {
	if m != nil {
		return m.SocketId
	}
	return 0
}

//原始包
type Packet struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Reply                string   `protobuf:"bytes,2,opt,name=Reply,proto3" json:"Reply,omitempty"`
	Buff                 []byte   `protobuf:"bytes,3,opt,name=Buff,proto3" json:"Buff,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Packet) Reset()         { *m = Packet{} }
func (m *Packet) String() string { return proto.CompactTextString(m) }
func (*Packet) ProtoMessage()    {}
func (*Packet) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fbeb53d931d8059, []int{3}
}

func (m *Packet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Packet.Unmarshal(m, b)
}
func (m *Packet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Packet.Marshal(b, m, deterministic)
}
func (m *Packet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Packet.Merge(m, src)
}
func (m *Packet) XXX_Size() int {
	return xxx_messageInfo_Packet.Size(m)
}
func (m *Packet) XXX_DiscardUnknown() {
	xxx_messageInfo_Packet.DiscardUnknown(m)
}

var xxx_messageInfo_Packet proto.InternalMessageInfo

func (m *Packet) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Packet) GetReply() string {
	if m != nil {
		return m.Reply
	}
	return ""
}

func (m *Packet) GetBuff() []byte {
	if m != nil {
		return m.Buff
	}
	return nil
}

//玩家集群信息
type PlayerClusterInfo struct {
	Id                   int64    `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	LeaseId              int64    `protobuf:"varint,2,opt,name=LeaseId,proto3" json:"LeaseId,omitempty"`
	WClusterId           uint32   `protobuf:"varint,3,opt,name=WClusterId,proto3" json:"WClusterId,omitempty"`
	ZClusterId           uint32   `protobuf:"varint,4,opt,name=ZClusterId,proto3" json:"ZClusterId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayerClusterInfo) Reset()         { *m = PlayerClusterInfo{} }
func (m *PlayerClusterInfo) String() string { return proto.CompactTextString(m) }
func (*PlayerClusterInfo) ProtoMessage()    {}
func (*PlayerClusterInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fbeb53d931d8059, []int{4}
}

func (m *PlayerClusterInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerClusterInfo.Unmarshal(m, b)
}
func (m *PlayerClusterInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerClusterInfo.Marshal(b, m, deterministic)
}
func (m *PlayerClusterInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerClusterInfo.Merge(m, src)
}
func (m *PlayerClusterInfo) XXX_Size() int {
	return xxx_messageInfo_PlayerClusterInfo.Size(m)
}
func (m *PlayerClusterInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerClusterInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerClusterInfo proto.InternalMessageInfo

func (m *PlayerClusterInfo) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *PlayerClusterInfo) GetLeaseId() int64 {
	if m != nil {
		return m.LeaseId
	}
	return 0
}

func (m *PlayerClusterInfo) GetWClusterId() uint32 {
	if m != nil {
		return m.WClusterId
	}
	return 0
}

func (m *PlayerClusterInfo) GetZClusterId() uint32 {
	if m != nil {
		return m.ZClusterId
	}
	return 0
}

func init() {
	proto.RegisterEnum("rpc.SERVICE", SERVICE_name, SERVICE_value)
	proto.RegisterEnum("rpc.SEND", SEND_name, SEND_value)
	proto.RegisterType((*RpcHead)(nil), "rpc.RpcHead")
	proto.RegisterType((*RpcPacket)(nil), "rpc.RpcPacket")
	proto.RegisterType((*ClusterInfo)(nil), "rpc.ClusterInfo")
	proto.RegisterType((*Packet)(nil), "rpc.Packet")
	proto.RegisterType((*PlayerClusterInfo)(nil), "rpc.PlayerClusterInfo")
}

func init() { proto.RegisterFile("rpc3.proto", fileDescriptor_0fbeb53d931d8059) }

var fileDescriptor_0fbeb53d931d8059 = []byte{
	// 547 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x53, 0x5d, 0x8b, 0xd3, 0x40,
	0x14, 0xdd, 0xa4, 0xf9, 0xbc, 0xed, 0xd6, 0xec, 0x20, 0x12, 0x44, 0xa4, 0x04, 0x94, 0xb2, 0x0f,
	0x15, 0x5c, 0xdf, 0x7c, 0x4a, 0xd2, 0xb8, 0x06, 0x42, 0x52, 0x26, 0xd1, 0x85, 0xbe, 0x48, 0x4d,
	0xa6, 0xab, 0x58, 0x9b, 0x30, 0x4d, 0x85, 0x3e, 0xf8, 0xe0, 0x93, 0xfe, 0x15, 0xff, 0xa5, 0xcc,
	0xdd, 0x69, 0xfa, 0x81, 0x6f, 0x39, 0xe7, 0x9e, 0x99, 0x7b, 0xef, 0x99, 0x13, 0x00, 0xde, 0x94,
	0x37, 0x93, 0x86, 0xd7, 0x6d, 0x4d, 0x7a, 0xbc, 0x29, 0xbd, 0x3f, 0x2a, 0x98, 0xb4, 0x29, 0xdf,
	0xb3, 0x45, 0x45, 0x86, 0xa0, 0xc6, 0x95, 0xab, 0x8c, 0x94, 0x71, 0x8f, 0xaa, 0x71, 0x45, 0x9e,
	0x82, 0x95, 0xd7, 0xe5, 0x37, 0xd6, 0xc6, 0x95, 0xab, 0x8e, 0x94, 0xf1, 0x25, 0xed, 0x30, 0xf1,
	0x60, 0x90, 0xf3, 0x32, 0x5c, 0x6d, 0x37, 0x2d, 0xe3, 0x71, 0xe5, 0xf6, 0xb0, 0x7e, 0xc2, 0x91,
	0x67, 0x60, 0x1f, 0x04, 0x1a, 0x0a, 0x0e, 0x04, 0x79, 0x03, 0xc3, 0x29, 0xdb, 0xb4, 0x39, 0xe3,
	0x3f, 0x18, 0x2f, 0x76, 0x0d, 0x73, 0xf5, 0x91, 0x32, 0x1e, 0xbe, 0x1e, 0x4c, 0x78, 0x53, 0x4e,
	0xf2, 0x88, 0x7e, 0x8c, 0xc3, 0x88, 0x9e, 0x69, 0xc8, 0x0b, 0xb0, 0x72, 0xb6, 0xae, 0x50, 0x6f,
	0xa0, 0xde, 0x96, 0xfa, 0x74, 0x4a, 0xbb, 0x92, 0x68, 0xed, 0x97, 0x6d, 0xcd, 0xd3, 0xc5, 0x77,
	0xe6, 0x9a, 0x23, 0x65, 0x6c, 0xd3, 0x03, 0x41, 0x1e, 0x83, 0x4e, 0x59, 0xb3, 0xda, 0xb9, 0x16,
	0x56, 0x1e, 0x80, 0xf7, 0x4b, 0x01, 0x9b, 0x36, 0xe5, 0x6c, 0x21, 0x56, 0x14, 0xcb, 0xbf, 0xdb,
	0xae, 0x4b, 0xbc, 0x40, 0x41, 0x59, 0x87, 0xc9, 0x13, 0x30, 0x7c, 0x7e, 0x9f, 0xb0, 0x35, 0xda,
	0xa2, 0x53, 0x89, 0xc8, 0xcb, 0xce, 0x4b, 0xf4, 0xa3, 0x2f, 0x77, 0x91, 0x1c, 0xed, 0x8c, 0x76,
	0x51, 0x17, 0xd4, 0xd5, 0x0e, 0x6d, 0x19, 0xd0, 0x3d, 0xf4, 0x7e, 0x2b, 0xd0, 0xdf, 0x5b, 0xb4,
	0x5e, 0xd6, 0x64, 0x04, 0x1a, 0xae, 0xaa, 0xfc, 0xc7, 0x1a, 0xac, 0xe0, 0xa3, 0x35, 0x38, 0x87,
	0x4d, 0xd5, 0xb8, 0x21, 0x04, 0xb4, 0x59, 0xcd, 0x5b, 0x1c, 0x40, 0xa7, 0xf8, 0x2d, 0xe6, 0xbd,
	0x63, 0x5f, 0xef, 0xbf, 0xb4, 0xd8, 0x4e, 0xa7, 0x12, 0x9d, 0x3c, 0xb0, 0x7e, 0xfa, 0xc0, 0x5e,
	0x00, 0x86, 0x74, 0xe2, 0x10, 0x8b, 0x4b, 0x8c, 0x45, 0xe7, 0x9e, 0x7a, 0xe4, 0x9e, 0xe8, 0x1b,
	0x6c, 0x97, 0x4b, 0xec, 0x3b, 0xa0, 0xf8, 0xed, 0xfd, 0x84, 0xab, 0xd9, 0x6a, 0xb1, 0x63, 0xfc,
	0x78, 0xa5, 0xf3, 0x94, 0xb9, 0x60, 0x26, 0x6c, 0xb1, 0x61, 0x32, 0x64, 0x3d, 0xba, 0x87, 0xe4,
	0x39, 0xc0, 0xdd, 0x79, 0xc2, 0x8e, 0x18, 0x51, 0x9f, 0x9f, 0x07, 0xec, 0x88, 0xb9, 0xfe, 0xab,
	0x80, 0x29, 0xcd, 0x22, 0x16, 0x68, 0x69, 0x96, 0x46, 0xce, 0x05, 0x01, 0x30, 0xc2, 0x24, 0x8e,
	0xd2, 0xc2, 0x51, 0xc8, 0x10, 0xe0, 0xd6, 0x2f, 0x22, 0x21, 0x8a, 0xa8, 0xa3, 0x92, 0x2b, 0xb8,
	0xf4, 0xc3, 0x30, 0xfb, 0x90, 0x16, 0x92, 0xea, 0x91, 0x47, 0xd0, 0xbf, 0xcb, 0x68, 0x32, 0x95,
	0x84, 0x26, 0xce, 0xcc, 0xb3, 0x74, 0x7f, 0x46, 0x27, 0x0e, 0x0c, 0xc2, 0x28, 0x2d, 0x22, 0x2a,
	0x19, 0x43, 0x1c, 0x49, 0xb2, 0xdb, 0x38, 0x95, 0x84, 0x89, 0x6d, 0xe8, 0x2c, 0x94, 0xd8, 0x12,
	0x6d, 0xf0, 0xce, 0x69, 0x20, 0x29, 0xfb, 0x7a, 0x02, 0x9a, 0x88, 0x30, 0xb1, 0x41, 0x9f, 0x65,
	0x71, 0x5a, 0x38, 0x17, 0xa4, 0x0f, 0x66, 0xe0, 0x27, 0x7e, 0x1a, 0x46, 0x0f, 0x93, 0x06, 0x99,
	0x4f, 0xa7, 0x9f, 0x42, 0x3f, 0x2f, 0x1c, 0x35, 0xb0, 0xe6, 0xc6, 0xe4, 0xd5, 0x5b, 0xde, 0x94,
	0x9f, 0x0d, 0xfc, 0x9b, 0x6f, 0xfe, 0x05, 0x00, 0x00, 0xff, 0xff, 0xb8, 0xf5, 0x2b, 0x4f, 0xdb,
	0x03, 0x00, 0x00,
}
