// Code generated by protoc-gen-go. DO NOT EDIT.
// source: worlddb.proto

package smessage

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SaveRound struct {
	Round                int32    `protobuf:"varint,1,opt,name=round,proto3" json:"round,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SaveRound) Reset()         { *m = SaveRound{} }
func (m *SaveRound) String() string { return proto.CompactTextString(m) }
func (*SaveRound) ProtoMessage()    {}
func (*SaveRound) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c9f9ec28e0a6f68, []int{0}
}

func (m *SaveRound) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SaveRound.Unmarshal(m, b)
}
func (m *SaveRound) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SaveRound.Marshal(b, m, deterministic)
}
func (m *SaveRound) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SaveRound.Merge(m, src)
}
func (m *SaveRound) XXX_Size() int {
	return xxx_messageInfo_SaveRound.Size(m)
}
func (m *SaveRound) XXX_DiscardUnknown() {
	xxx_messageInfo_SaveRound.DiscardUnknown(m)
}

var xxx_messageInfo_SaveRound proto.InternalMessageInfo

func (m *SaveRound) GetRound() int32 {
	if m != nil {
		return m.Round
	}
	return 0
}

type LoginLogData struct {
	UserId               string   `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Ip                   string   `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Mac                  string   `protobuf:"bytes,3,opt,name=mac,proto3" json:"mac,omitempty"`
	Lastlogin            int32    `protobuf:"varint,4,opt,name=lastlogin,proto3" json:"lastlogin,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginLogData) Reset()         { *m = LoginLogData{} }
func (m *LoginLogData) String() string { return proto.CompactTextString(m) }
func (*LoginLogData) ProtoMessage()    {}
func (*LoginLogData) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c9f9ec28e0a6f68, []int{1}
}

func (m *LoginLogData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginLogData.Unmarshal(m, b)
}
func (m *LoginLogData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginLogData.Marshal(b, m, deterministic)
}
func (m *LoginLogData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginLogData.Merge(m, src)
}
func (m *LoginLogData) XXX_Size() int {
	return xxx_messageInfo_LoginLogData.Size(m)
}
func (m *LoginLogData) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginLogData.DiscardUnknown(m)
}

var xxx_messageInfo_LoginLogData proto.InternalMessageInfo

func (m *LoginLogData) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *LoginLogData) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *LoginLogData) GetMac() string {
	if m != nil {
		return m.Mac
	}
	return ""
}

func (m *LoginLogData) GetLastlogin() int32 {
	if m != nil {
		return m.Lastlogin
	}
	return 0
}

type MatchLogData struct {
	UserId               string   `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Start                int64    `protobuf:"varint,2,opt,name=start,proto3" json:"start,omitempty"`
	End                  int64    `protobuf:"varint,3,opt,name=end,proto3" json:"end,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MatchLogData) Reset()         { *m = MatchLogData{} }
func (m *MatchLogData) String() string { return proto.CompactTextString(m) }
func (*MatchLogData) ProtoMessage()    {}
func (*MatchLogData) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c9f9ec28e0a6f68, []int{2}
}

func (m *MatchLogData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MatchLogData.Unmarshal(m, b)
}
func (m *MatchLogData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MatchLogData.Marshal(b, m, deterministic)
}
func (m *MatchLogData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MatchLogData.Merge(m, src)
}
func (m *MatchLogData) XXX_Size() int {
	return xxx_messageInfo_MatchLogData.Size(m)
}
func (m *MatchLogData) XXX_DiscardUnknown() {
	xxx_messageInfo_MatchLogData.DiscardUnknown(m)
}

var xxx_messageInfo_MatchLogData proto.InternalMessageInfo

func (m *MatchLogData) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *MatchLogData) GetStart() int64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *MatchLogData) GetEnd() int64 {
	if m != nil {
		return m.End
	}
	return 0
}

type BattleLogData struct {
	Round                int32    `protobuf:"varint,1,opt,name=round,proto3" json:"round,omitempty"`
	Day                  string   `protobuf:"bytes,2,opt,name=day,proto3" json:"day,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BattleLogData) Reset()         { *m = BattleLogData{} }
func (m *BattleLogData) String() string { return proto.CompactTextString(m) }
func (*BattleLogData) ProtoMessage()    {}
func (*BattleLogData) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c9f9ec28e0a6f68, []int{3}
}

func (m *BattleLogData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BattleLogData.Unmarshal(m, b)
}
func (m *BattleLogData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BattleLogData.Marshal(b, m, deterministic)
}
func (m *BattleLogData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BattleLogData.Merge(m, src)
}
func (m *BattleLogData) XXX_Size() int {
	return xxx_messageInfo_BattleLogData.Size(m)
}
func (m *BattleLogData) XXX_DiscardUnknown() {
	xxx_messageInfo_BattleLogData.DiscardUnknown(m)
}

var xxx_messageInfo_BattleLogData proto.InternalMessageInfo

func (m *BattleLogData) GetRound() int32 {
	if m != nil {
		return m.Round
	}
	return 0
}

func (m *BattleLogData) GetDay() string {
	if m != nil {
		return m.Day
	}
	return ""
}

func init() {
	proto.RegisterType((*SaveRound)(nil), "smessage.SaveRound")
	proto.RegisterType((*LoginLogData)(nil), "smessage.LoginLogData")
	proto.RegisterType((*MatchLogData)(nil), "smessage.MatchLogData")
	proto.RegisterType((*BattleLogData)(nil), "smessage.BattleLogData")
}

func init() { proto.RegisterFile("worlddb.proto", fileDescriptor_5c9f9ec28e0a6f68) }

var fileDescriptor_5c9f9ec28e0a6f68 = []byte{
	// 231 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x90, 0x31, 0x4f, 0xc3, 0x30,
	0x10, 0x85, 0xd5, 0x98, 0x54, 0xe4, 0xa8, 0x11, 0xb2, 0x2a, 0x64, 0x21, 0x06, 0xf0, 0xc4, 0x54,
	0x06, 0x06, 0x06, 0xb6, 0x8a, 0x05, 0xa9, 0x30, 0x98, 0x8d, 0xed, 0x5a, 0x9b, 0x10, 0xc9, 0x8d,
	0x23, 0xfb, 0x0a, 0xe2, 0xdf, 0x23, 0xdb, 0x89, 0x58, 0x90, 0xd8, 0xbe, 0xf7, 0x12, 0xdf, 0x67,
	0x1f, 0xf0, 0x2f, 0x1f, 0x9c, 0x31, 0xdb, 0xd5, 0x10, 0x3c, 0x79, 0x71, 0x1c, 0xf7, 0x36, 0x46,
	0x6c, 0xed, 0x05, 0x1f, 0xa1, 0x7c, 0x50, 0xd7, 0xd0, 0xbc, 0xe2, 0xa7, 0xd5, 0xfe, 0xd0, 0x1b,
	0xb1, 0x84, 0x3a, 0x24, 0x90, 0xb3, 0xab, 0xd9, 0x4d, 0xad, 0x4b, 0x50, 0xef, 0xb0, 0xd8, 0xf8,
	0xb6, 0xeb, 0x37, 0xbe, 0x7d, 0x44, 0x42, 0x71, 0x0e, 0xf3, 0x43, 0xb4, 0xe1, 0xa9, 0xfc, 0xd6,
	0xe8, 0x31, 0x89, 0x53, 0xa8, 0xba, 0x41, 0x56, 0xb9, 0xab, 0xba, 0x41, 0x9c, 0x01, 0xdb, 0xe3,
	0x4e, 0xb2, 0x5c, 0x24, 0x14, 0x97, 0xd0, 0x38, 0x8c, 0xe4, 0xd2, 0x34, 0x79, 0x94, 0x1d, 0xbf,
	0x85, 0x7a, 0x81, 0xc5, 0x33, 0xd2, 0xee, 0xe3, 0x3f, 0xcf, 0x12, 0xea, 0x48, 0x18, 0x28, 0xab,
	0x98, 0x2e, 0x21, 0xd9, 0x6c, 0x6f, 0xb2, 0x8d, 0xe9, 0x84, 0xea, 0x1e, 0xf8, 0x1a, 0x89, 0x9c,
	0x9d, 0x06, 0xfe, 0xf9, 0xbc, 0x74, 0xd0, 0xe0, 0xf7, 0x78, 0xef, 0x84, 0x6b, 0xfe, 0x76, 0xb2,
	0xba, 0x7d, 0x98, 0x36, 0xb6, 0x9d, 0xe7, 0x4d, 0xdd, 0xfd, 0x04, 0x00, 0x00, 0xff, 0xff, 0x8e,
	0xde, 0xd3, 0x26, 0x53, 0x01, 0x00, 0x00,
}
